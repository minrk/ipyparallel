name: Test

on:
  pull_request:
  push:

env:
  # UTF-8 content may be interpreted as ascii and causes errors without this.
  LANG: C.UTF-8

jobs:
  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 15

    strategy:
      # Keep running even if one variation of the job fail
      fail-fast: false
      matrix:
        include:
          - python: "3.9"
            ssh: ssh
          - python: "3.6"
            tornado: "5.1.1"
          - python: "3.6"
          - python: "3.7"
            controller_ip: "*"
          - python: "3.8"
            mpi: mpi
          - python: "3.9"

    steps:
      - uses: actions/checkout@v2

      - name: Cache conda environment
        uses: actions/cache@v2
        with:
          path: |
            ~/conda
          key: conda

      - name: Set environment variables
        if: matrix.controller_ip
        run: |
          echo "IPP_CONTROLLER_IP=${{ matrix.controller_ip }}" >> $GITHUB_ENV

      - name: Set up docker-compose for ssh launcher
        if: ${{ matrix.ssh }}
        run: |
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1
          cd ci/ssh
          docker-compose up -d --build

      - name: Install Python (conda) ${{ matrix.python }}
        if: matrix.mpi
        run: |
          export MAMBA_ROOT_PREFIX=$HOME/conda
          test -d $MAMBA_ROOT_PREFIX || mkdir $MAMBA_ROOT_PREFIX
          wget -qO- https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
          eval "$(./bin/micromamba shell hook -s posix)"
          micromamba activate
          micromamba install -y -c conda-forge mpich mpi4py python=${{ matrix.python }}
          echo "PATH=$MAMBA_ROOT_PREFIX/bin:$PATH" >> $GITHUB_ENV

      - name: Install Python ${{ matrix.python }}
        if: ${{ ! matrix.mpi }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install --pre --upgrade .[test] distributed joblib codecov
          pip install --only-binary :all: matplotlib || echo "no matplotlib"
          if [ "${{ matrix.tornado }}" != "" ]; then
            pip install tornado==${{ matrix.tornado }}
          fi

      - name: Show environment
        run: pip freeze

      - name: Run mpi tests
        if: ${{ matrix.mpi }}
        run: |
          pytest -vx --color=yes --cov=ipyparallel ipyparallel/tests/test_cluster.py

      - name: Run ssh tests
        if: ${{ matrix.ssh }}
        run: |
          pytest -ra -v --maxfail=2 --color=yes --cov=ipyparallel ipyparallel/tests/test_ssh.py

      - name: Run tests
        if: ${{ ! matrix.mpi && ! matrix.ssh }}
        # FIXME: --color=yes explicitly set because:
        #        https://github.com/actions/runner/issues/241
        run: |
          pytest -v --maxfail=3 --color=yes --cov=ipyparallel ipyparallel/tests

      - name: Submit codecov report
        run: |
          codecov
